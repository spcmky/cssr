{% extends '::base.html.twig' %}

{% block page_header %}
    <h1>Update Scores</h1>
{% endblock %}

{% block breadcrumb %}
    <ol class="breadcrumb">
        <li><a href="{{ path('cssr_main_default_index') }}"><span class="glyphicon glyphicon-home"></span></a></li>
        {% if user_is_granted(user,'score admin') %}
        <li><a href="{{ path('score') }}">Scores</a></li>
        <li><a href="{{ path('score_student') }}">Students</a></li>
        {% endif %}
        <li class="active">{{ student.firstname|capitalize }} {{ student.lastname|capitalize }}</li>
    </ol>
{% endblock %}

{% block body %}

    <p>Scores for the week of {{period_start.format('m/d/Y')}} - {{period_end.format('m/d/Y')}}</p>

    {% if periods|length %}
    <select name="periodSelector" id="periodSelector">
        {% for date in periods %}
            <option value="{{ date.format('Y-m-d') }}" {% if date.format('Y-m-d') == period.format('Y-m-d') %}selected="selected"{%endif%}>{{ date.format('m/d/Y') }}</option>
        {% endfor %}
    </select>
    {%  endif %}

    <h3><a href="{{ path('student_show', { 'id': student.id }) }}">{{ student.firstname|capitalize }} {{ student.lastname|capitalize }}</a></h3>

    <form id="student-scores" name="student-scores">

    <div style="display: none;" class="alert alert-success"></div>
    <div style="display: none;" class="alert alert-danger"></div>

    <table class="table table-hover table-bordered">
        <thead>
        <tr>
            <th style="text-align: center;">Area</th>
            <th style="text-align: center;">Score</th>
            <th style="text-align: center;">Career Success Standards</th>
            <th style="width: 300px; text-align: center;">Comments</th>
        </tr>
        </thead>
        <tbody>
        {% for score in scores %}

            {% set value = 'N/A' %}
            {% set score_id = '-1' %}
            {% if score.score.id %}
                {% set value = score.score.value %}
                {% set score_id = score.score.id %}
            {% endif %}

            <tr data-scoreId="{{ score_id }}" data-studentId="{{ student.id }}" data-courseId="{{ score.course.id }}">
                <td style="font-size: 14px; text-align: center; font-weight: bold;">{{ score.course.name }}</td>
                <td style="text-align: center;">
                    <select class="score-value">
                        <option>N/A</option>
                    {% for i in 1..5 %}
                        <option {% if value == i %}selected="selected"{% endif %}>{{ i }}</option>
                    {% endfor %}}
                    </select>
                </td>
                <td style="font-size: 10px;">
                    <div class="row">
                    {% for standard in standards %}
                        {% if loop.index0 % 4 == 0 %}
                        <div class="col-lg-6">
                        {% endif %}

                        {% set checked = '' %}
                        {% if score.comment is iterable and score.comment.standards is iterable %}
                            {% for standard_name in score.comment.standards %}
                                {% if standard_name == standard.name %}
                                    {% set checked = 'checked="checked"' %}
                                {% endif %}
                            {% endfor %}
                        {% endif %}

                        <label class="checkbox">
                            <input type="checkbox" name="score-standards[]" value="{{ standard.id }}" {{ checked }}> {{ standard.name }}
                        </label>

                        {% if loop.index0 % 4 == 3 %}
                        </div>
                        {% endif %}
                    {% endfor %}
                    </div>
                </td>
                <td>
                    <textarea class="form-control score-comment" rows="5" data-commentId="{% if score.comment is iterable %}{{ score.comment.id }}{% else %}-1{% endif %}">{% if score.comment is iterable %}{{ score.comment.body }}{% endif %}</textarea>
                    {% if score.comment is iterable %}
                        <small>Last updated by <a href="{{ path('staff_show', { 'id': score.comment.updater.id }) }}">{{ score.comment.updater.firstname|capitalize }} {{ score.comment.updater.lastname|capitalize }}</a> on {{ score.comment.updated|date('m/d/Y') }}</small>
                    {% endif %}
                </td>
            </tr>

        {% endfor %}
        </tbody>
    </table>
    </form>

    <script type="text/javascript">
        // Get the ul that holds the collection of tags
        (function() {

            $(function() {

                // check for value change
                $('select.score-value').on('change', function(){

                    var _this = this;
                    var scoreId = $(this).parent().parent().data('scoreid');

                    if ( scoreId < 0 ) {

                        var data = {
                            value: $(this).val(),
                            student: $(this).parent().parent().data('studentid'),
                            course: $(this).parent().parent().data('courseid'),
                            period: $('#periodSelector').val()
                        };

                        $.ajax({
                            type: "POST",
                            url: '{{ path("score_create") }}',
                            data: data,
                            success: function(data,textStatus){
                                if ( textStatus == 'success' && data.status == 'success' ) {
                                    //console.log('success');
                                    $(_this).parent().parent().data('scoreid',data.scoreId);

                                    $('#student-scores').find('.alert-success').html('Score created successfully!').show();
                                    setTimeout(function(){
                                        $('#student-scores').find('.alert-success').hide();
                                    },3000);

                                } else {
                                    $('#student-scores').find('.alert-danger').html('Score creation failed!').show();
                                    setTimeout(function(){
                                        $('#student-scores').find('.alert-danger').hide();
                                    },3000);
                                    //console.log('failed');
                                }
                            },
                            dataType: 'json'
                        });

                    } else {

                        var data = {
                            value: $(this).val(),
                            _method: 'PUT'
                        };

                        var url = '{{ path("score_update", {'id': 'score_id'}) }}';
                        url = url.replace("score_id", scoreId);

                        $.ajax({
                            type: "PUT",
                            url: url,
                            data: data,
                            success: function(data,textStatus){
                                if ( textStatus == 'success' && data.status == 'success' ) {
                                    //console.log('success');
                                    $('#student-scores').find('.alert-success').html('Score updated successfully!').show();
                                    setTimeout(function(){
                                        $('#student-scores').find('.alert-success').hide();
                                    },3000);

                                } else {
                                    $('#student-scores').find('.alert-danger').html('Score update failed!').show();
                                    setTimeout(function(){
                                        $('#student-scores').find('.alert-danger').hide();
                                    },3000);
                                    //console.log('failed');
                                }
                            },
                            dataType: 'json'
                        });
                    }

                });

                // check for comment
                $('textarea.score-comment').on('focus', function(){
                    var initialValue = $(this).val();
                    var _this = this;

                    function testForChange() {
                        if ( $(_this).val() != initialValue ) {
                            var scoreId = $(_this).parent().parent().data('scoreid');
                            if ( scoreId > 0 ) {
                                // need a score id before we can submit

                                var commentId = $(_this).data('commentid');

                                if ( commentId < 0 ) {
                                    var data = {
                                        comment: $(_this).val(),
                                        score: scoreId,
                                        standards: []
                                    };

                                    var checked_standards = $(_this).parent().parent().find('input:checked');
                                    $.each(checked_standards,function(){
                                        data.standards.push($(this).val());
                                    })

                                    $.ajax({
                                        type: "POST",
                                        url: '{{ path("comment_create") }}',
                                        data: data,
                                        success: function(data,textStatus){
                                            if ( textStatus == 'success' && data.status == 'success' ) {
                                                console.log('success');
                                                $(_this).data('commentid',data.commentId);


                                            } else {
                                                console.log('failed');
                                            }
                                        },
                                        dataType: 'json'
                                    });
                                } else {
                                    var data = {
                                        comment: $(_this).val(),
                                        standards: [],
                                        _method: 'PUT'
                                    };

                                    var checked_standards = $(_this).parent().parent().find('input:checked');
                                    $.each(checked_standards,function(){
                                        data.standards.push($(this).val());
                                    })

                                    var url = '{{ path("comment_update", {'id': 'comment_id'}) }}';
                                    url = url.replace("comment_id", commentId);

                                    $.ajax({
                                        type: "PUT",
                                        url: url,
                                        data: data,
                                        success: function(data,textStatus){
                                            if ( textStatus == 'success' && data.status == 'success' ) {
                                                console.log('success');

                                                //$(_this).data('commentid',data.commentId);


                                            } else {
                                                console.log('failed');
                                            }
                                        },
                                        dataType: 'json'
                                    });
                                }


                            }
                        }
                    }

                    $(this).on('blur',function() {
                        window.clearInterval(timer);
                        testForChange();
                        $(_this).unbind("blur");
                    });

                    var timer = window.setInterval(function() {
                        //testForChange();
                    }, 500);
                });


            });

        })();
    </script>
{% endblock %}
